name: Data Science Project Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run Tests
    - name: Run tests
      run: |
        # Replace 'pytest' with any specific test command you use
        pytest tests/

    # Step 5: Run Linting (Optional)
    - name: Run linting
      run: |
        # Install linting tool, e.g., flake8
        pip install flake8
        # Run linting
        flake8 src/

    # Step 6: Upload test results (Optional)
    - name: Archive Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: tests/

  model-training:
    runs-on: ubuntu-latest
    needs: setup-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 7: Run Model Training
    - name: Train model
      run: |
        python src/train.py --config config/params.yaml

    # Step 8: Save Model Artifacts
    - name: Archive Model
      uses: actions/upload-artifact@v3
      with:
        name: model
        path: path/to/model  # Replace with actual model path

  deploy:
    runs-on: ubuntu-latest
    needs: model-training
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Server
      run: |
        # Deployment scripts, e.g., to AWS S3, Google Cloud, or Heroku
        echo "Deploying model..."
